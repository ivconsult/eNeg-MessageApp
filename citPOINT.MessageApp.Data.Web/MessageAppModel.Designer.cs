//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MessageAppModel", "FK__NegPhaseM__Messa__08EA5793", "MessageType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.MessageApp.Data.Web.MessageType), "NegPhaseMessages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.MessageApp.Data.Web.NegPhaseMessage), true)]
[assembly: EdmRelationshipAttribute("MessageAppModel", "FK__NegPhaseM__Negot__09DE7BCC", "NegotiationPhase", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.MessageApp.Data.Web.NegotiationPhase), "NegPhaseMessages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.MessageApp.Data.Web.NegPhaseMessage), true)]

#endregion

namespace citPOINT.MessageApp.Data.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MessageAppEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MessageAppEntities object using the connection string found in the 'MessageAppEntities' section of the application configuration file.
        /// </summary>
        public MessageAppEntities() : base("name=MessageAppEntities", "MessageAppEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MessageAppEntities object.
        /// </summary>
        public MessageAppEntities(string connectionString) : base(connectionString, "MessageAppEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MessageAppEntities object.
        /// </summary>
        public MessageAppEntities(EntityConnection connection) : base(connection, "MessageAppEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageType> MessageTypes
        {
            get
            {
                if ((_MessageTypes == null))
                {
                    _MessageTypes = base.CreateObjectSet<MessageType>("MessageTypes");
                }
                return _MessageTypes;
            }
        }
        private ObjectSet<MessageType> _MessageTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NegotiationPhase> NegotiationPhases
        {
            get
            {
                if ((_NegotiationPhases == null))
                {
                    _NegotiationPhases = base.CreateObjectSet<NegotiationPhase>("NegotiationPhases");
                }
                return _NegotiationPhases;
            }
        }
        private ObjectSet<NegotiationPhase> _NegotiationPhases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NegPhaseMessage> NegPhaseMessages
        {
            get
            {
                if ((_NegPhaseMessages == null))
                {
                    _NegPhaseMessages = base.CreateObjectSet<NegPhaseMessage>("NegPhaseMessages");
                }
                return _NegPhaseMessages;
            }
        }
        private ObjectSet<NegPhaseMessage> _NegPhaseMessages;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageTypes(MessageType messageType)
        {
            base.AddObject("MessageTypes", messageType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NegotiationPhases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNegotiationPhases(NegotiationPhase negotiationPhase)
        {
            base.AddObject("NegotiationPhases", negotiationPhase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NegPhaseMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNegPhaseMessages(NegPhaseMessage negPhaseMessage)
        {
            base.AddObject("NegPhaseMessages", negPhaseMessage);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public int ImportMessageTemplates(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("ImportMessageTemplates", userIDParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MessageAppModel", Name="MessageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageType object.
        /// </summary>
        /// <param name="messageTypeID">Initial value of the MessageTypeID property.</param>
        /// <param name="messageTypeName">Initial value of the MessageTypeName property.</param>
        public static MessageType CreateMessageType(global::System.Guid messageTypeID, global::System.String messageTypeName)
        {
            MessageType messageType = new MessageType();
            messageType.MessageTypeID = messageTypeID;
            messageType.MessageTypeName = messageTypeName;
            return messageType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MessageTypeID
        {
            get
            {
                return _MessageTypeID;
            }
            set
            {
                if (_MessageTypeID != value)
                {
                    OnMessageTypeIDChanging(value);
                    ReportPropertyChanging("MessageTypeID");
                    _MessageTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageTypeID");
                    OnMessageTypeIDChanged();
                }
            }
        }
        private global::System.Guid _MessageTypeID;
        partial void OnMessageTypeIDChanging(global::System.Guid value);
        partial void OnMessageTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageTypeName
        {
            get
            {
                return _MessageTypeName;
            }
            set
            {
                OnMessageTypeNameChanging(value);
                ReportPropertyChanging("MessageTypeName");
                _MessageTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageTypeName");
                OnMessageTypeNameChanged();
            }
        }
        private global::System.String _MessageTypeName;
        partial void OnMessageTypeNameChanging(global::System.String value);
        partial void OnMessageTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MessageAppModel", "FK__NegPhaseM__Messa__08EA5793", "NegPhaseMessages")]
        public EntityCollection<NegPhaseMessage> NegPhaseMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NegPhaseMessage>("MessageAppModel.FK__NegPhaseM__Messa__08EA5793", "NegPhaseMessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NegPhaseMessage>("MessageAppModel.FK__NegPhaseM__Messa__08EA5793", "NegPhaseMessages", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MessageAppModel", Name="NegotiationPhase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NegotiationPhase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NegotiationPhase object.
        /// </summary>
        /// <param name="negotiationPhaseID">Initial value of the NegotiationPhaseID property.</param>
        /// <param name="negotiationPhaseName">Initial value of the NegotiationPhaseName property.</param>
        public static NegotiationPhase CreateNegotiationPhase(global::System.Guid negotiationPhaseID, global::System.String negotiationPhaseName)
        {
            NegotiationPhase negotiationPhase = new NegotiationPhase();
            negotiationPhase.NegotiationPhaseID = negotiationPhaseID;
            negotiationPhase.NegotiationPhaseName = negotiationPhaseName;
            return negotiationPhase;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegotiationPhaseID
        {
            get
            {
                return _NegotiationPhaseID;
            }
            set
            {
                if (_NegotiationPhaseID != value)
                {
                    OnNegotiationPhaseIDChanging(value);
                    ReportPropertyChanging("NegotiationPhaseID");
                    _NegotiationPhaseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NegotiationPhaseID");
                    OnNegotiationPhaseIDChanged();
                }
            }
        }
        private global::System.Guid _NegotiationPhaseID;
        partial void OnNegotiationPhaseIDChanging(global::System.Guid value);
        partial void OnNegotiationPhaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NegotiationPhaseName
        {
            get
            {
                return _NegotiationPhaseName;
            }
            set
            {
                OnNegotiationPhaseNameChanging(value);
                ReportPropertyChanging("NegotiationPhaseName");
                _NegotiationPhaseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NegotiationPhaseName");
                OnNegotiationPhaseNameChanged();
            }
        }
        private global::System.String _NegotiationPhaseName;
        partial void OnNegotiationPhaseNameChanging(global::System.String value);
        partial void OnNegotiationPhaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MessageAppModel", "FK__NegPhaseM__Negot__09DE7BCC", "NegPhaseMessages")]
        public EntityCollection<NegPhaseMessage> NegPhaseMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NegPhaseMessage>("MessageAppModel.FK__NegPhaseM__Negot__09DE7BCC", "NegPhaseMessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NegPhaseMessage>("MessageAppModel.FK__NegPhaseM__Negot__09DE7BCC", "NegPhaseMessages", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MessageAppModel", Name="NegPhaseMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NegPhaseMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NegPhaseMessage object.
        /// </summary>
        /// <param name="negPhaseMessagesID">Initial value of the NegPhaseMessagesID property.</param>
        public static NegPhaseMessage CreateNegPhaseMessage(global::System.Guid negPhaseMessagesID)
        {
            NegPhaseMessage negPhaseMessage = new NegPhaseMessage();
            negPhaseMessage.NegPhaseMessagesID = negPhaseMessagesID;
            return negPhaseMessage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegPhaseMessagesID
        {
            get
            {
                return _NegPhaseMessagesID;
            }
            set
            {
                if (_NegPhaseMessagesID != value)
                {
                    OnNegPhaseMessagesIDChanging(value);
                    ReportPropertyChanging("NegPhaseMessagesID");
                    _NegPhaseMessagesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NegPhaseMessagesID");
                    OnNegPhaseMessagesIDChanged();
                }
            }
        }
        private global::System.Guid _NegPhaseMessagesID;
        partial void OnNegPhaseMessagesIDChanging(global::System.Guid value);
        partial void OnNegPhaseMessagesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MessageTypeID
        {
            get
            {
                return _MessageTypeID;
            }
            set
            {
                OnMessageTypeIDChanging(value);
                ReportPropertyChanging("MessageTypeID");
                _MessageTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageTypeID");
                OnMessageTypeIDChanged();
            }
        }
        private Nullable<global::System.Guid> _MessageTypeID;
        partial void OnMessageTypeIDChanging(Nullable<global::System.Guid> value);
        partial void OnMessageTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> NegotiationPhaseID
        {
            get
            {
                return _NegotiationPhaseID;
            }
            set
            {
                OnNegotiationPhaseIDChanging(value);
                ReportPropertyChanging("NegotiationPhaseID");
                _NegotiationPhaseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NegotiationPhaseID");
                OnNegotiationPhaseIDChanged();
            }
        }
        private Nullable<global::System.Guid> _NegotiationPhaseID;
        partial void OnNegotiationPhaseIDChanging(Nullable<global::System.Guid> value);
        partial void OnNegotiationPhaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageContent
        {
            get
            {
                return _MessageContent;
            }
            set
            {
                OnMessageContentChanging(value);
                ReportPropertyChanging("MessageContent");
                _MessageContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MessageContent");
                OnMessageContentChanged();
            }
        }
        private global::System.String _MessageContent;
        partial void OnMessageContentChanging(global::System.String value);
        partial void OnMessageContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MessageAppModel", "FK__NegPhaseM__Messa__08EA5793", "MessageType")]
        public MessageType MessageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageType>("MessageAppModel.FK__NegPhaseM__Messa__08EA5793", "MessageType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageType>("MessageAppModel.FK__NegPhaseM__Messa__08EA5793", "MessageType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MessageType> MessageTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageType>("MessageAppModel.FK__NegPhaseM__Messa__08EA5793", "MessageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MessageType>("MessageAppModel.FK__NegPhaseM__Messa__08EA5793", "MessageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MessageAppModel", "FK__NegPhaseM__Negot__09DE7BCC", "NegotiationPhase")]
        public NegotiationPhase NegotiationPhase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegotiationPhase>("MessageAppModel.FK__NegPhaseM__Negot__09DE7BCC", "NegotiationPhase").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegotiationPhase>("MessageAppModel.FK__NegPhaseM__Negot__09DE7BCC", "NegotiationPhase").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NegotiationPhase> NegotiationPhaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegotiationPhase>("MessageAppModel.FK__NegPhaseM__Negot__09DE7BCC", "NegotiationPhase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NegotiationPhase>("MessageAppModel.FK__NegPhaseM__Negot__09DE7BCC", "NegotiationPhase", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
